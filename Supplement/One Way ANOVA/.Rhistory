#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
table(Exams$Exam)
tapply(Exams4$Grade, Exams4$Exam, mean)
tapply(Exams$Grade, Exams$Exam, mean)
tapply(Exams$Grade, Exams$Exam, mean)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
Exams = read.csv("Exams4.csv")
Exams
tapply(Exams$Grade, Exams$Exam, mean)
tapply(Exams$Grade, Exams$Exam, sd)
tapply(Exams$Grade, Exams$Exam, length)
tapply(Exams$Grade, Exams$Exam, mean)
tapply(Exams$Grade, Exams$Exam, sd)
tapply(Exams$Grade, Exams$Exam, length)
summary(Exams$Grade)
length(Exams$Grade)
mean(Exams$Grade)
sd(Exams$Grade)
# Overall Statistics of Grade
c(length(Exams$Grade),mean(Exams$Grade),sd(Exams$Grade))
overall = c(length(Exams$Grade),mean(Exams$Grade),sd(Exams$Grade))
# Group Statistics of Grade
length=tapply(Exams$Grade, Exams$Exam, length)
average=tapply(Exams$Grade, Exams$Exam, mean)
st.dev=tapply(Exams$Grade, Exams$Exam, sd)
#Create Table
cbind(length,average,st.dev)
#Create Table
rbind(cbind(length,average,st.dev),overall)
# Overall Statistics of Grade
overall = c(length(Exams$Grade),mean(Exams$Grade),sd(Exams$Grade))
# Group Statistics of Grade
length=tapply(Exams$Grade, Exams$Exam, length)
average=tapply(Exams$Grade, Exams$Exam, mean)
st.dev=tapply(Exams$Grade, Exams$Exam, sd)
#Create Table
rbind(cbind(length,average,st.dev),overall)
# Overall Statistics of Grade
overall = c(length(Exams$Grade),mean(Exams$Grade),sd(Exams$Grade))
# Group Statistics of Grade
length=tapply(Exams$Grade, Exams$Exam, length)
average=tapply(Exams$Grade, Exams$Exam, mean)
st.dev=tapply(Exams$Grade, Exams$Exam, sd)
# Create Table
rbind(cbind(length,average,st.dev),overall)
# Create Visual
boxplot(Grade~Exam,data=Exams)
points(average,col="red",pch=16,cex=2)
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=4)
abline(h = mean(Exams$Grade), col = "blue")
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=4)
abline(h = mean(Exams$Grade), col = "blue",lty=2,lwd=2)
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=4)
abline(h = mean(Exams$Grade), col = "blue",lty=2,lwd=3)
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=16,cex=2)
abline(h = mean(Exams$Grade), col = "blue",lty=2,lwd=3)
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=16,cex=1.5)
abline(h = mean(Exams$Grade), col = "blue",lty=2,lwd=3)
overall[2]
SST = sum((Exam$Grade-overall[2])^2)
SST = sum((Exams$Grade-overall[2])^2)
SST
Exams$Grade
View(Exams)
rep(average,5)
# Visual
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=16,cex=1.5)
abline(h = mean(Exams$Grade), col = "blue",lty=2,lwd=3)
# SST vs SSE
SST = sum((Exams$Grade-overall[2])^2)
SST
SSE = sum((Exams$Grade - rep(average,5))^2)
SSE
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
# Visual
plot(Grade ~ Exam, data = Exams)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
Exams = read.csv("Exams4.csv")
Exams
# Overall Statistics of Grade
overall = c(length(Exams$Grade),mean(Exams$Grade),sd(Exams$Grade))
# Group Statistics of Grade
length=tapply(Exams$Grade, Exams$Exam, length)
average=tapply(Exams$Grade, Exams$Exam, mean)
st.dev=tapply(Exams$Grade, Exams$Exam, sd)
# Create Table
rbind(cbind(length,average,st.dev),overall)
# Create Visual
boxplot(Grade~Exam,data=Exams)
points(average,col="red",pch=16,cex=2)
# Visual
plot(Grade ~ Exam, data = Exams)
points(average, col="red", pch=16,cex=1.5)
abline(h = mean(Exams$Grade), col = "blue",lty=2,lwd=3)
# SST vs SSE
SST = sum((Exams$Grade-overall[2])^2)
SST
SSE = sum((Exams$Grade - rep(average,5))^2)
SSE
#ANOVA F-test
aov(Grade~Exam,data=Exams)
aov(Grade~factor(Exam),data=Exams)
SSGroups = SST-SSE
SSGroups
#ANOVA F-test
aov(Grade~factor(Exam),data=Exams)
amodG = aov(Grade~factor(Exam),data=Exams)
summary(amodG)
SSGroups
amodG = aov(Grade~factor(Exam),data=Exams)
summary(amodG)
plot(amodG)
plot(amodG)
plot(amodG)
tapply(Exams$Grade, Exams$Exam, sd)
23.24>2*13.93
Exams = read.csv("Exams4.csv")
boxplot(Grade~Student,data=Exams)
Exams = read.csv("Exams4.csv")
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),col="red",pch=16,cex=2)
plot(Grade~Student,data=Exams)
plot(Grade~Student,data=Exams)
plot(Grade~Student,data=Exams)
Exams = read.csv("Exams4.csv")
plot(Grade~Student,data=Exams)
plot(Grade~factor(Student),data=Exams)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
Exams = read.csv("Exams4.csv")
plot(Grade~factor(Student),data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),col="red",pch=16,cex=2)
plot(Grade~factor(Student),data=Exams)
Exams = read.csv("Exams4.csv")
plot(Grade~Student,data=Exams)
Exams = read.csv("Exams4.csv")
plot(x=Exams$Student,y=Exams$Grade,data=Exams)
Exams = read.csv("Exams4.csv")
plot(x=Exams$Student,y=Exams$Grade,data=Exams,xlim=c("Barb"))
Exams = read.csv("Exams4.csv")
dotchart (x=Exams$Grade,  cex = 1, col = “black”, labels = Exams$Student, pch = 16, xlab = NULL)
dotchart (x=Exams$Grade,  cex = 1, col = “black”, labels = Exams$Student, pch = 16, xlab = NULL)
dotchart (Exams$Grade, labels = Exams$Student, pch = 1)
dotchart (Exams$Grade,
labels = Exams$Student,
groups=Exams$Stude
dotchart (Exams$Grade,
dotchart (Exams$Grade,
labels = Exams$Student,
groups=Exams$Student)
dotchart (Exams$Grade,
labels = Exams$Student,
groups=Exams$Student)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Exam, mean),col="red",pch=16,cex=2)
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),col="red",pch=16,cex=2)
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),col="red",pch=16,cex=1.5)
abline(h=mean(Exams$Grade))
Exams = read.csv("Exams4.csv")
Exams = read.csv("Exams4.csv")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
Exams = read.csv("Exams4.csv")
Exams = read.csv("Exams4.csv")
Exams = read.csv("Exams4.csv")
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),col="red",pch=16,cex=1.5)
abline(h=mean(Exams$Grade),lty=2,lwd=2,col="blue")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
Exams = read.csv("Exams4.csv")
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),
col="red",pch=16,cex=1.5)
abline(h=mean(Exams$Grade),lty=2,lwd=2,col="blue")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(Stat2Data)
library(mosaic)
Exams = read.csv("Exams4.csv")
boxplot(Grade~Student,data=Exams)
points(tapply(Exams$Grade, Exams$Student, mean),
col="red",pch=16,cex=1.5)
abline(h=mean(Exams$Grade),lty=2,lwd=2,col="blue")
amodS = aov(Grade~Student)
amodS = aov(Grade~Student,data=Exams)
amodS = aov(Grade~Student,data=Exams)
summary(amodS)
out = summary(amodS)
View(amodS)
tapply(Exams$Grade,Exams$Student,mean)
ybars = tapply(Exams$Grade,Exams$Student,mean)
qt(0.975,20-5)
tapply(Exams$Grade,Exams$Student,length)
MSE
ybars = tapply(Exams$Grade,Exams$Student,mean)
t.value = qt(0.975,20-5)
MSE = out[[1]][2,3]
counts = tapply(Exams$Grade,Exams$Student,length)
MSE
MSE/counts
sqrt(MSE/counts)
t.value*sqrt(MSE/counts)
ybars-t.value*sqrt(MSE/counts)
out = summary(amodS)
ybars = tapply(Exams$Grade,Exams$Student,mean)
t.value = qt(0.975,20-5)
MSE = out[[1]][2,3]
counts = tapply(Exams$Grade,Exams$Student,length)
Exams$Lower = ybars-t.value*sqrt(MSE/counts)
Exams$Upper = ybars+t.value*sqrt(MSE/counts)
tapply(Exams$Grade,Exams$Student,mean)
unique(Exams$Student)
data.frame(Student=unique(Exams$Student))
data.frame(Student=unique(Exams$Student),Lower,Upper)
out = summary(amodS)
ybars = tapply(Exams$Grade,Exams$Student,mean)
t.value = qt(0.975,20-5)
MSE = out[[1]][2,3]
counts = tapply(Exams$Grade,Exams$Student,length)
Lower = ybars-t.value*sqrt(MSE/counts)
Upper = ybars+t.value*sqrt(MSE/counts)
data.frame(Student=unique(Exams$Student),Lower,Upper)
data.frame(Lower,Upper)
out = summary(amodS)
ybars = tapply(Exams$Grade,Exams$Student,mean)
t.value = qt(0.975,amodS$df.residual)
MSE = out[[1]][2,3]
counts = tapply(Exams$Grade,Exams$Student,length)
Lower = ybars-t.value*sqrt(MSE/counts)
Upper = ybars+t.value*sqrt(MSE/counts)
data.frame(Lower,Upper)
ybars
counts[2]
diff = (ybars[1]-ybars[2])
lower = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
diff = (ybars[1]-ybars[2])
lower = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
upper = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
(lower,upper)
diff = (ybars[1]-ybars[2])
lower = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
upper = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
c(lower,upper)
diff = (ybars[1]-ybars[2])
lower = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
upper = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
print(lower,upper)
diff = (ybars[1]-ybars[2])
lower = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
upper = diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2])
paste("(",lower,",",upper,")",sep="")
diff = (ybars[1]-ybars[2])
lower = round(diff-t.value*sqrt(MSE/counts[1]+MSE/counts[2]),2)
upper = round(diff+t.value*sqrt(MSE/counts[1]+MSE/counts[2]),2)
paste("(",lower,",",upper,")",sep="")
diff = (ybars[1]-ybars[5])
lower = round(diff-t.value*sqrt(MSE/counts[1]+MSE/counts[5]),2)
upper = round(diff+t.value*sqrt(MSE/counts[1]+MSE/counts[5]),2)
paste("(",lower,",",upper,")",sep="")
MSE = out[[1]][2,3]
RMSE = sqrt(MSE)
RMSE
ybars[5]
ybars[5]-mean(Exams$Grade)
(ybars[5]-mean(Exams$Grade))/RMSE
