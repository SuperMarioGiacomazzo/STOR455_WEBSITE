#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
lego <- read_csv("lego.csv")
lego_2_theme <- read_csv("lego_two_themes")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
lego <- read_csv("lego.csv")
lego_2_theme <- read_csv("lego_two_themes")
lego_2_theme <- read_csv("lego_two_themes.csv")
View(lego_2_theme)
lego <- read_csv("lego.csv")
lego_2_theme <- read_csv("lego_two_themes.csv")
head(lego1) #Vertically (Top 6 Rows by Default)
lego <- read_csv("lego.csv")
lego_2_theme <- read_csv("lego_two_themes.csv")
#View(lego)
View(lego)
library(mosaic)
install.packages("Stat2Data")
install.packages("mosaic")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
lego <- read_csv("lego.csv")
lego_2_theme <- read_csv("lego_two_themes.csv")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(Stat2Data) #Install Stat2Data
install.packages("mosaic")
lego <- read_csv("lego.csv")
View(lego)
hist(lego$Amazon_Price)
boxplot(lego$Amazon_Price, horizontal = TRUE)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(Stat2Data) #Install Stat2Data
lego <- read_csv("lego.csv")
hist(lego$Amazon_Price)
boxplot(lego$Amazon_Price, horizontal = TRUE)
is.na(Amazon_Price)
is.na(lego$Amazon_Price)
Amazon_lego = subset(lego,is.na(Amazon_Price)==FALSE)
View(Amazon_lego)
mean(Amazon_lego$Amazon_Price)
xbar = mean(Amazon_lego$Amazon_Price)
m = median(Amazon_lego$Amazon_Price)
#We know that we don't have Amazon Prices for Certain Lego Sets
Amazon_lego = subset(lego,is.na(Amazon_Price)==FALSE)
xbar = mean(Amazon_lego$Amazon_Price)
m = median(Amazon_lego$Amazon_Price)
xbar
m
xbar_resid = ...
#We know that we don't have Amazon Prices for Certain Lego Sets
Amazon_lego = subset(lego,is.na(Amazon_Price)==FALSE)
xbar = mean(Amazon_lego$Amazon_Price)
m = median(Amazon_lego$Amazon_Price)
xbar
m
#We know that we don't have Amazon Prices for Certain Lego Sets
Amazon_lego = subset(lego,is.na(Amazon_Price)==FALSE)
xbar = mean(Amazon_lego$Amazon_Price)
m = median(Amazon_lego$Amazon_Price)
xbar
m
Amazon_lego$Amazon_Price
Amazon_lego$Amazon_Price - xbar
xbar_resid = Amazon_lego$Amazon_Price - xbar
m_resid = Amazon_lego$Amazon_Price - m
xbar_resid^2
sum(xbar_resid^2)
xbar_sse=sum(xbar_resid^2)
xbar_sae=sum(abs(xbar_resid))
m_sse=sum(m_resid^2)
m_sae=sum(abs(m_resid))
View(lego)
xbar_resid = Amazon_lego$Amazon_Price - xbar
m_resid = Amazon_lego$Amazon_Price - m
xbar_sse=sum(xbar_resid^2)
xbar_sae=sum(abs(xbar_resid))
m_sse=sum(m_resid^2)
m_sae=sum(abs(m_resid))
data.frame(Estimator=c("Mean","Median"),Sum_Squared_Errors=c(xbar_sse,m_sse), Sum_Absolute_Errors=c(xbar_sae,m_sae))
sum(xbar_resid^2)
xbar_sse=sum(xbar_resid^2)
xbar_resid = Amazon_lego$Amazon_Price - xbar
m_resid = Amazon_lego$Amazon_Price - m
xbar_sse=sum(xbar_resid^2)
xbar_sae=sum(abs(xbar_resid))
m_sse=sum(m_resid^2)
m_sae=sum(abs(m_resid))
data.frame(Estimator=c("Mean","Median"),Sum_Squared_Errors=c(xbar_sse,m_sse), Sum_Absolute_Errors=c(xbar_sae,m_sae))
mean(Amazon_Price~Theme,data=Amazon_lego)
tally(~Theme,data=Amazon_lego)
sd(Amazon_Price~Theme,data=Amazon_lego)
mean(Amazon_Price~Theme,data=Amazon_lego) #Average Price Per Theme
tally(~Theme,data=Amazon_lego) #Number of Observations For Each Theme
sd(Amazon_Price~Theme,data=Amazon_lego) #SD of Price Per Theme
boxplot(Amazon_Price~Theme,data=Amazon_lego,las=2) #Side-by-Side Boxplots
mean(Amazon_Price~Theme,data=Amazon_lego) #Average Price Per Theme
tally(~Theme,data=Amazon_lego) #Number of Observations For Each Theme
sd(Amazon_Price~Theme,data=Amazon_lego) #SD of Price Per Theme
boxplot(Amazon_Price~Theme,data=Amazon_lego,las=2,horizontal=TRUE) #Side-by-Side Boxplots
boxplot(Amazon_Price~Theme,data=Amazon_lego,las=2) #Side-by-Side Boxplots
mean(Amazon_Price~Theme,data=Amazon_lego) #Average Price Per Theme
tally(~Theme,data=Amazon_lego) #Number of Observations For Each Theme
sd(Amazon_Price~Theme,data=Amazon_lego) #SD of Price Per Theme
boxplot(Amazon_Price~Theme,data=Amazon_lego) #Side-by-Side Boxplots
mean(Amazon_Price~Theme,data=Amazon_lego) #Average Price Per Theme
tally(~Theme,data=Amazon_lego) #Number of Observations For Each Theme
sd(Amazon_Price~Theme,data=Amazon_lego) #SD of Price Per Theme
boxplot(Amazon_Price~Theme,data=Amazon_lego,las=2) #Side-by-Side Boxplots
lego_2_theme = subset(Amazon_lego,Theme=="Friends"|Theme=='Marvel')
View(lego_2_theme)
t.test(Amazon_price~Theme,data=Amazon_lego)
t.test(Amazon_Price~Theme,data=Amazon_lego_2_theme) #Conduct t-Test
lego_2_theme = subset(Amazon_lego,Theme=="Friends"|Theme=='Marvel')
t.test(Amazon_Price~Theme,data=lego_2_theme) #Conduct t-Test
boxplot(...) #Evaluate Assumptions
