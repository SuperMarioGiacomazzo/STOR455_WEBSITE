abline(mod)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(AER)
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers")]
head(fatal)
#Consider scatterplot
plot(x=fatal$pop,y=fatal$fatal)
#Create New Variable Called adj_fatal
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
#Remove Original Variable
fatal$fatal = NULL
#Preview Modified Dataset
head(fatal)
#Consider new scatterplot
plot(x=fatal$pop,y=fatal$adj_fatal)
#Model for the relationship between fatalities and proportion of young drivers.
#Overwrite variable for youngdrivers to help interpretation of the slope
fatal$youngdrivers=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~youngdrivers,data=fatal)
abline(mod)
#Model for the relationship between fatalities and proportion of young drivers.
#Create new variable for youngdrivers to help interpretation of slope
fatal$yd=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~youngdrivers,data=fatal)
abline(mod)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(AER)
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers")]
head(fatal)
#Consider scatterplot
plot(x=fatal$pop,y=fatal$fatal)
#Create New Variable Called adj_fatal
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
#Remove Original Variable
fatal$fatal = NULL
#Preview Modified Dataset
head(fatal)
#Consider new scatterplot
plot(x=fatal$pop,y=fatal$adj_fatal)
#Model for the relationship between fatalities and proportion of young drivers.
#Create new variable for youngdrivers to help interpretation of slope
fatal$yd=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~youngdrivers,data=fatal)
abline(mod)
#Model for the relationship between fatalities and proportion of young drivers.
#Create new variable for youngdrivers to help interpretation of slope
fatal$yd=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
mod = lm(adj_fatal~yd,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~yd,data=fatal)
abline(mod)
anova(adj_fatal~yd,data=fatal)
anova(mod,data=fatal)
anova(mod,data=fatal)
#Model for the relationship between fatalities and proportion of young drivers.
#Create new variable for youngdrivers to help interpretation of slope
fatal$yd=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
mod = lm(adj_fatal~yd,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~yd,data=fatal)
abline(mod)
confint(mod)
anova(mod,data=fatal)
1.41e-05
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(AER)
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers")]
head(fatal)
#Consider scatterplot
plot(x=fatal$pop,y=fatal$fatal)
#Create New Variable Called adj_fatal
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
#Remove Original Variable
fatal$fatal = NULL
#Preview Modified Dataset
head(fatal)
#Consider new scatterplot
plot(x=fatal$pop,y=fatal$adj_fatal)
#Model for the relationship between fatalities and proportion of young drivers.
#Create new variable for youngdrivers to help interpretation of slope
fatal$yd=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
mod = lm(adj_fatal~yd,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~yd,data=fatal)
abline(mod)
1.41e-05
View(fatal)
View(fatal)
mean(fatal$pop)
mean(fatal$youngdrivers
mean(fatal$youngdrivers)
mean(fatal$youngdrivers)
mean(fatal$yd)
mean(fatal$adj_fatal)
anova(modlego2)
library(readr)
library(Stat2Data)
lego <- read_csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/lego.csv")
lego_under_800_pieces = subset(lego, Pieces < 800)
modlego2 = lm(Amazon_Price^(0.3)~Pieces, data=lego_under_800_pieces)
plot(Amazon_Price^(0.3)~Pieces, data=lego_under_800_pieces)
abline(modlego2, col="red")
summary(modlego2)
plot(modlego2, c(1, 2, 5))
cor(lego_under_800_pieces$Pieces, lego_under_800_pieces$Amazon_Price^(0.3))
cor(
lego_under_800_pieces$Pieces,
lego_under_800_pieces$Amazon_Price^(0.3),
use="complete.obs"
)
data(Houses)
head(Houses)
cor(Houses)
data(Cereal)
head(Cereal)
#cor(Cereal)
cor(Cereal[c(2:4)])
cor.test(lego_under_800_pieces$Pieces, lego_under_800_pieces$Amazon_Price^(0.3))
cor(lego_under_800_pieces$Pieces, lego_under_800_pieces$Amazon_Price^(0.3))
cor(
lego_under_800_pieces$Pieces,
lego_under_800_pieces$Amazon_Price^(0.3),
use="complete.obs"
)
data(Houses)
head(Houses)
cor(Houses)
anova(modlego2)
confint(mod)
#Model for the relationship between fatalities and proportion of young drivers.
#Create new variable for youngdrivers to help interpretation of slope
fatal$yd=fatal$youngdrivers*100
mod = lm(adj_fatal~youngdrivers,data=fatal)
summary(mod)
mod = lm(adj_fatal~yd,data=fatal)
summary(mod)
#We have found significance. Hooray!!. Let's visualize the model.
plot(adj_fatal~yd,data=fatal)
abline(mod)
1.41e-05
anova(mod,data=fatal)
anova(mod)
anova(mod)
#Hand Calculation of SST
sum((fatal$adj_fatal-mean(fatal$adj_fatal))^2)
#Notice that this equals the sum from the ANOVA table
0.0598+1.02930
#Hand Calculation of SST
sum((fatal$adj_fatal-mean(fatal$adj_fatal))^2)
#Notice that this equals the sum from the ANOVA table
0.0598+1.02930
summary(mod)
#Manually calculate p-value using the t-distribution
pt(0.5,334,lower.tail=T)
#Manually calculate p-value using the t-distribution
pt(0,334,lower.tail=T)
summary(mod)
qt(0.5,334)
qt(0,334)
qt(0.1,334)
pt(4.407,334,lower.tail=F)
#Manually calculate p-value using the t-distribution
pt(4.407,334,lower.tail=T) #Find area to right and multiply by 2
2*(1-pt(4.407,334,lower.tail=T))
summary(mod)
anova(mod)
#Manually find the p-value and check it matches
pf(19.422,1,334,lower.tail=FALSE) #Want the area to the right of 19.422
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(AER)
#Consider scatterplot
plot(x=fatal$pop,y=fatal$fatal)
#Create New Variable Called adj_fatal
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic)
library(AER)
source("https://raw.githubusercontent.com/JA-McLean/STOR455/master/scripts/CIPIPlot.R") #Sourcing a function written by Dr. McLean
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic)
library(AER)
source("https://raw.githubusercontent.com/JA-McLean/STOR455/master/scripts/CIPIPlot.R") #Sourcing a function written by Dr. McLean
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers","year",
"unemp","beertax","miles")]
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
fatal$youngdrivers=fatal$youngdrivers*100
fatal$fatal=NULL
fatal$pop=NULL
#Rearrange Variables (Put "Y" variable at Beginning)
fatal=fatal[,c(6,1:5)]
#Preview Data
head(fatal)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic)
library(AER)
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers","year",
"unemp","beertax","miles")]
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
fatal$youngdrivers=fatal$youngdrivers*100
fatal$fatal=NULL
fatal$pop=NULL
#Rearrange Variables (Put "Y" variable at Beginning)
fatal=fatal[,c(6,1:5)]
#Preview Data
head(fatal)
mod = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Fit Linear Regression Model
mod = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Summary from Model
summary(mod)
fatal$year = as.numeric(fatal$year)
fatal$fatal=NULL
fatal$pop=NULL
#Rearrange Variables (Put "Y" variable at Beginning)
fatal=fatal[,c(6,1:5)]
#Preview Data
head(fatal)
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers","year",
"unemp","beertax","miles")]
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
fatal$youngdrivers=fatal$youngdrivers*100
fatal$year = as.numeric(fatal$year)
fatal$fatal=NULL
fatal$pop=NULL
fatal
fatal[,c(6,1:5)]
#Rearrange Variables (Put "Y" variable at Beginning)
fatal=fatal[,c(6,1:5)]
#Preview Data
head(fatal)
data("Fatalities") # Load Data
fatal = Fatalities[,c("fatal","pop","youngdrivers","year",
"unemp","beertax","miles")]
fatal$adj_fatal = (fatal$fatal/fatal$pop)*1000
fatal$youngdrivers=fatal$youngdrivers*100
fatal$year = as.numeric(fatal$year) #Need to Convert to Numeric Variable (Currently a Factor Variable)
fatal$fatal=NULL
fatal$pop=NULL
#Rearrange Variables (Put "Y" variable at Beginning)
fatal=fatal[,c(6,1:5)]
#Preview Data
head(fatal)
#Fit Linear Regression Model
mod = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Summary from Model
summary(mod)
#Fit Linear Regression Model
mod = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Summary from Model
summary(mod)
#Pulling Out Adjusted R-squared
sum.out = summary(mod)
sum.out$adj.r.squared
sum.out$r.squared
sum.out$adj.r.squared
sum.out$r.squared
cor(x=fatal$adj_fatal,y=fitted(mod))
cor(x=fatal$adj_fatal,y=fitted(mod))^2
sum.out$r.squared
#Fit Linear Regression Model
mod = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Summary from Model
summary(mod)
#Pulling Out R-squared Adjusted R-squared
sum.out = summary(mod)
sum.out$r.squared
sum.out$adj.r.squared
#Calculate R-squared by hand
cor(x=fatal$adj_fatal,y=fitted(mod))^2
anova(mod)
aov(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
anova(mod)
summary(mod)
anova(summary(mod))
anova(mod)
aov(mod)
source("https://raw.githubusercontent.com/JA-McLean/STOR455/master/scripts/anova455.R") #For modified ANOVA table from Dr. McLean
#Modified ANOVA function
anova455(mod)
#Modified ANOVA function
anova455
#Run anova() function and notice how it is broken down by predictor variable. This is called sequential sum of squares.
#P-value in F-Test is Actually Testing if the Previous Model is significantly different than the Previous Model with the variable added.
anova(mod)
#Modified ANOVA function
anova455
anova455(mod)
formula(mod)
mod.none=lm(adj_fatal~1,data=fatal)
mod.full=lm(adj_fatal~., data=fatal)
anova(mod.none,mod.full)
anova455(mod)
anova(mod.none,mod.full)
anova(mod.full,mod.none)
anova(mod.none,mod.full)
#Run anova() function and notice how it is broken down by predictor variable. This is called sequential sum of squares.
#P-value in F-Test is Actually Testing if the Previous Model is significantly different than the Previous Model with the variable added.
anova(mod)
#Modified ANOVA function
anova455
anova455(mod)
#Another Option
mod.none=lm(adj_fatal~1,data=fatal)
mod.full=lm(adj_fatal~., data=fatal)
anova(mod.none,mod.full)
#Run anova() function and notice how it is broken down by predictor variable. This is called sequential sum of squares.
#P-value in F-Test is Actually Testing if the Previous Model is significantly different than the Previous Model with the variable added.
anova(mod)
#Modified ANOVA function
#anova455
anova455(mod)
#Another Option
mod.none=lm(adj_fatal~1,data=fatal)
mod.full=lm(adj_fatal~., data=fatal)
anova(mod.none,mod.full)
mod.none=lm(adj_fatal~1,data=fatal) #Intercept Only
mod.full=lm(adj_fatal~., data=fatal) #Full Model Includes Intercept
anova(mod.none,mod.full)
anova455(mod)
anova455
formula(mod)
formula(mod)[1]
formula(mod)[3]
formula(mod)[1]
formula(mod)[2]
formula(mod)[3]
#Modified ANOVA function
#anova455
anova455(mod)
anova455
formula(model)[2]
formula(model)[2]
formula(model)
formula(mod)
formula(mod)[2]
formula(mod)[1]
paste("Model:", formula(model)[2])
paste("Model:", formula(mod)[2])
paste("Model:", formula(mod)[2].formula(mod)[1])
paste("Model:", formula(mod)[2] , formula(mod)[1])
paste("Model:", formula(mod))
#Run anova() function and notice how it is broken down by predictor variable. This is called sequential sum of squares.
#P-value in F-Test is Actually Testing if the Previous Model is significantly different than the Previous Model with the variable added.
anova(mod)
#Modified ANOVA function
#anova455
anova455(mod)
#Another Option
mod.none=lm(adj_fatal~1,data=fatal) #Intercept Only
mod.full=lm(adj_fatal~., data=fatal) #Full Model Includes Intercept
anova(mod.none,mod.full)
View(fatal)
View(fatal)
View(Fatalities)
View(fatal)
View(Fatalities)
View(Fatalities)
year  = 8
unemp = 8.5
beertax = 1.8
miles = 8000
data.frame(year,unemp,beertax,miles)
(mod,newdata=data.frame(year,unemp,beertax,miles),interval="confidence")
predict(mod,newdata=data.frame(year,unemp,beertax,miles),interval="confidence")
View(Fatalities)
youngdrivers = 24
year  = 8
unemp = 8.5
beertax = 1.8
miles = 8000
predict(mod,newdata=data.frame(youngdrivers,year,unemp,beertax,miles),interval="confidence")
youngdrivers = 24
year  = 8
unemp = 8.5
beertax = 1.8
miles = 8000
predict(mod,newdata=data.frame(youngdrivers,year,unemp,beertax,miles),interval="confidence")
predict(mod,newdata=data.frame(youngdrivers,year,unemp,beertax,miles),interval="prediction")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999) #Prevents the use of scientific notation
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic)
library(AER)
source("https://raw.githubusercontent.com/JA-McLean/STOR455/master/scripts/anova455.R") #For modified ANOVA table from Dr. McLean
mod.final = lm(adj_fatal~.-year,data=fatal)
summary(mod.final)
mod.without.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
mod.without.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
#Compare R-squared
summary(mod.without.year)$r.squared
#Compare adjusted R-squared
summary(mod.with.year)$r.squared
summary(mod.without.year)$r.squared
summary(mod.with.year)$r.squared
mod.without.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Compare R-squared
summary(mod.without.year)$r.squared
summary(mod.with.year)$r.squared
#Compare adjusted R-squared
mod.without.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Compare R-squared (Decreases)
summary(mod.without.year)$r.squared
summary(mod.with.year)$r.squared
#Compare adjusted R-squared
summary(mod.without.year)$adj.r.squared
summary(mod.with.year)$adj.r.squared
mod.without.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Compare R-squared (Increases)
summary(mod.without.year)$r.squared - summary(mod.with.year)$r.squared
#Compare adjusted R-squared
summary(mod.without.year)$adj.r.squared - summary(mod.with.year)$adj.r.squared
summary(mod.without.year)$adj.r.squared
summary(mod.with.year)$adj.r.squared
mod.without.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Compare R-squared (Increases)
summary(mod.without.year)$r.squared - summary(mod.with.year)$r.squared
#Compare adjusted R-squared (Increases by Less)
summary(mod.without.year)$adj.r.squared - summary(mod.with.year)$adj.r.squared
mod.without.year = lm(adj_fatal~youngdrivers + unemp + beertax + miles,data=fatal)
mod.with.year = lm(adj_fatal~youngdrivers + year + unemp + beertax + miles,data=fatal)
#Compare R-squared (Increases)
summary(mod.without.year)$r.squared - summary(mod.with.year)$r.squared
#Compare adjusted R-squared (Increases by Less)
summary(mod.without.year)$adj.r.squared - summary(mod.with.year)$adj.r.squared
