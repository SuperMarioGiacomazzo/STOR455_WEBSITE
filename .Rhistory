abline(h=0)
plot(y=stamp$resid,x=stamp$fit,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$fit,type="l")
abline(h=0)
plot(y=stamp$resid,x=stamp$Year,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$fit,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$Year,type="l")
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$fit,type="l")
abline(h=0)
plot(y=stamp$resid,x=1:25,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
plot(y=stamp$resid,x=1:25,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
plot(y=stamp$resid,x=1:25,type="l")
abline(h=0)
plot(y=stamp2$resid,x=1:21,type="l")
abline(h=0)
plot(y=stamp2$resid,x=1:21,type="l")
abline(h=0)
plot(y=stamp2$resid,x=1:21,type="l")
abline(h=0)
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library()
read.csv(file="imports-85.data")
read.csv(file="imports-85.data",header=T)
read.csv(file="imports-85.data",header=F)
cars=read.csv(file="imports-85.data",header=F)
names=c()
View(cars)
cars=read.csv(file="imports-85.data",header=F)
names(cars)=c("Symboling",
"Normalized_Losses",
"Make",
"Fuel_Type",
"Aspiration",
"Number_Doors",
"Body",
"Drive",
"Engine_Location",
"Wheel_Base",
"Length",
"Width",
"Height",
"Weight",
"Engine_Type",
"Cylinders",
"Engine_Size",
"Fuel",
"Bore",
"Stroke",
"Comp_Ratio",
"HP",
"City_MPG",
"Hwy_MPG",
"Price")
View(cars)
cars=read.csv(file="imports-85.data",header=F)
names(cars)=c("Symboling",
"Normalized_Losses",
"Make",
"Fuel_Type",
"Aspiration",
"Number_Doors",
"Body",
"Drive",
"Engine_Location",
"Wheel_Base",
"Length",
"Width",
"Height",
"Weight",
"Engine_Type",
"Cylinders",
"Engine_Size",
"Fuel",
"Bore",
"Stroke",
"Comp_Ratio",
"HP",
"RPM",
"City_MPG",
"Hwy_MPG",
"Price")
View(cars)
cars=read.csv(file="imports-85.data",header=F)
names(cars)=c("Symboling","Normalized_Losses","Make","Fuel_Type","Aspiration","Number_Doors",
"Body","Drive","Engine_Location","Wheel_Base","Length","Width","Height","Weight","Engine_Type",
"Cylinders","Engine_Size","Fuel","Bore","Stroke","Comp_Ratio","HP","RPM",
"City_MPG", "Hwy_MPG","Price")
str(cars)
ggplot(data=cars) +
geom_bar(aes(x=Fuel))
ggplot(data=cars) +
geom_bar(aes(x=Fuel)) +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=fct_infreq(Fuel))) +
theme_classic()
detach("package:forcats", unload = TRUE)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(forcats) #Install Package If Needed
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ggplot(data=cars) +
geom_bar(aes(x=fct_infreq(Fuel)),color="blue") +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=fct_infreq(Fuel)),fill="blue") +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=fct_infreq(Fuel)),fill="maroon") +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=fct_infreq(Fuel)),fill="maroon") +
xlab("Fuel Type") +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=fct_infreq(Fuel)),fill="maroon") +
xlab("Fuel Type") +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=Fuel,group=Drive))
ggplot(data=cars) +
geom_bar(aes(x=Fuel,group=Drive))
ggplot(data=cars) +
geom_bar(aes(x=Fuel,fill=Drive))
ggplot(data=cars) +
geom_bar(aes(x=Engine_Location,fill=Drive))
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive))
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive)) +
theme_classic()
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive)) +
theme_bw()
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive)) +
scale_fill_manual("Drive",values=c("darkolivegreen1","deeppink","ivory3")) +
theme_bw()
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive)) +
scale_fill_manual("Drive",values=c("darkolivegreen","deeppink","ivory3")) +
theme_bw()
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive),position="dodge") +
scale_fill_manual("Drive",values=c("darkolivegreen","deeppink","ivory3")) +
theme_bw()
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive),position = "dodge") +
scale_fill_manual("Drive",values=c("darkolivegreen","deeppink","ivory3")) +
theme_bw()
Cylinder.tab = table(cars$Cylinders)
Cylinder.tab
Cylinder.tab = table(cars$Fuel_Type)
ggplot(cars) +
geom_bar(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
table(cars$Fuel_Type)
Cylinder.tab = table(cars$Cylinders)
Cylinder.tab
data.frame(Number_of_Cylinders=c("four","five","six","eight"),
Count=c(159,11,24,5))
data.frame(`Number of Cylinders`=c("four","five","six","eight"),
Count=c(159,11,24,5))
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(`Number of Cylinders`=c("four","five","six","eight"),
Count=c(159,11,24,5))
ggplot(cars) +
geom_bar(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(`Number of Cylinders`=c("four","five","six","eight"),
Count=c(159,11,24,5))
ggplot(Cylinder) +
geom_bar(aes(x="",y="Count",fill=`Number of Cylinders`),color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(`Number of Cylinders`=c("four","five","six","eight"),
Count=c(159,11,24,5))
ggplot(Cylinder) +
geom_col(aes(x="",y="Count",fill=`Number of Cylinders`),color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
ggplot(Cylinder) +
geom_col(aes(x="",y="Count",fill=`Number of Cylinders`),color = "black")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(Cylinders=c("four","five","six","eight"),
Count=c(159,11,24,5))
ggplot(Cylinder) +
geom_col(aes(x="",y="Count",fill=Cylinders),color = "black")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(Cylinders=c("four","five","six","eight"),
Count=c(159,11,24,5))
ggplot(Cylinder, aes(x = "", y = Count, fill = Cylinders)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(Cylinders=c("four","five","six","eight"),
Count=c(159,11,24,5))
ggplot(Cylinder, aes(x = "", y = Count, fill = Cylinders)) +
geom_col(color = "black") +
geom_text(aes(label = Count),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
table(cars$Cylinders)
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=tibble(Cylinders=c("four","five","six"),
Count=c(159,11,24))
ggplot(Cylinder, aes(x = "", y = Count, fill = Cylinders)) +
geom_col(color = "black") +
geom_text(aes(label = Count),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(Cylinders=c("four","five","six"),
Count=c(159,11,24))
ggplot(Cylinder, aes(x = "", y = Count, fill = Cylinders)) +
geom_col(color = "black") +
geom_text(aes(label = Count),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
Cylinder.tabulate = table(cars$Cylinders)
Cylinder=data.frame(Cylinders=c("four","five","six"),
Count=c(159,11,24))
ggplot(Cylinder, aes(x = "", y = Count, fill = Cylinders)) +
geom_col(color = "black") +
geom_text(aes(label = Count),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
ggplot(data=cars) +
geom_bar(aes(x=Body,fill=Drive)) +
scale_fill_manual("Drive",values=c("darkolivegreen","deeppink","ivory3")) +
theme_bw()
ggplot(cars) +
geom_dotplot(aes(x=City_MPG))
ggplot(cars) +
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
ggplot(cars) +
stat_density_2d(aes(x=Length, y=Width,fill = ..level..), geom = "polygon", colour="white")
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
cars %>%
group_by(Body,Number_Doors)
cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_))
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg))
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg)) +
scale_fill_gradient(low = "red", high = "white")
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray")
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray")+
geom_text(aes(label = avg_hwy_mpg), color = "black", size = 4) +
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray")+
geom_text(aes(label = avg_hwy_mpg), color = "black", size = 4)
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray"
ggplot(cars.summary) +
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=mean(Hwy_MPG))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray") +
geom_text(aes(label = avg_hwy_mpg), color = "black", size = 4) +
coord_fixed()
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray")
library(Stat2Data)
Survey1
Handwrt
Handwrt
Handwrt
library(Stat2Data)
data(Handwriting)
View(Handwriting)
View(Handwriting)
Handwriting$Gender==0
Gender0 = Handwriting[Handwriting$Gender==0,]
Gender1 = Handwriting[Handwriting$Gender==1,]
View(Gender0)
Gender0$Survey1
Gender1$Survey1
mean(Gender0$Survey1,na.rm=T)
mean(Gender1$Survey1,na.rm=T)
boxplot(Handwriting$Survey1~Handwriting$Gender)
mean(Gender0$Survey1,na.rm=T)
mean(Gender1$Survey1,na.rm=T)
Gender0
mean(Gender0$Survey1,na.rm=T)
subset(Handwriting, Gender==0)
subset(Handwriting, Survey1>50)
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray") +
geom_text(aes(label = avg_hwy_mpg), color = "white", size = 4) +
coord_fixed()
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray") +
geom_text(aes(x=Body,y=Number_Doors,label = avg_hwy_mpg), color = "white", size = 4)
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=round(mean(Hwy_MPG),2))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray") +
geom_text(aes(x=Body,y=Number_Doors,label = avg_hwy_mpg), color = "white", size = 4) +
coord_fixed()
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=round(mean(Hwy_MPG),2))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray") +
geom_text(aes(x=Body,y=Number_Doors,label = avg_hwy_mpg), color = "white", size = 8) +
coord_fixed()
cars.summary=cars %>%
group_by(Body,Number_Doors) %>%
summarize(avg_hwy_mpg=round(mean(Hwy_MPG),2))
ggplot(cars.summary) +
geom_tile(aes(x=Body,y=Number_Doors,fill=avg_hwy_mpg),color="black") +
scale_fill_gradient(low = "red", high = "gray") +
geom_text(aes(x=Body,y=Number_Doors,label = avg_hwy_mpg), color = "white", size = 8)
plot(y=stamp$resid,x=1:25,type="l")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(Stat2Data) #Install Stat2Data
data("USstamps") # Load Data
stamp = USstamps # Shorten Name
rm(USstamps) #Removes Old Object from Environment
plot(Price ~ Year,data=stamp)
#Remove First Four Years in Data (1885,1917,1919,1932)
#See Exercise 1.33 for Reason Why
stamp2 = subset(stamp, Year > 1932)
plot(Price ~ Year,data=stamp2)
#Linear Regression on Original Data
mod1 <- lm(Price~Year,data=stamp)
mod1
summary(mod1)
plot(Price ~ Year,data=stamp)
abline(mod1)
#Linear Regression on Subsetted Data
mod2 <-lm(Price~Year, data=stamp2)
mod2
summary(mod2)
plot(Price ~ Year,data=stamp2)
abline(mod2)
mod1$residuals
mod1$fitted.values
stamp$fit=mod1$fitted.values
stamp$resid=mod1$residuals
mod2$residuals
mod2$fitted.values
stamp2$fit=mod2$fitted.values
stamp2$resid=mod2$residuals
plot(y=stamp$resid,x=stamp$fit,type="l")
abline(h=0) #h=location of horizontal line
plot(y=stamp2$resid,x=stamp2$fit,type="l")
abline(h=0)
plot(y=stamp$resid,x=1:25,type="l")
abline(h=0) #h=location of horizontal line
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
plot(y=stamp$resid,x=1:25,type="l")
abline(h=0) #h=location of horizontal line
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
hist(mod1$residuals,breaks=20)
hist(mod1$residuals,breaks=10)
hist(mod1$residuals,breaks=5)
hist(mod1$residuals,breaks=4)
hist(mod1$residuals,breaks=5)
hist(mod1$residuals,breaks=5)
hist(stamp2$resid,breaks=5)
hist(mod1$residuals,breaks=5) #Remember: We can always plot residuals directly from model object
hist(stamp2$resid,breaks=5) #Remember: We can plot residuals that we saved into our dataset
hist(mod1$residuals,breaks=5) #Remember: We can always plot residuals directly from model object
hist(stamp2$resid,breaks=5) #Remember: We can plot residuals that we saved into our dataset
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
library(mosaic) #Install Mosaic Package
library(Stat2Data) #Install Stat2Data
data("USstamps") # Load Data
stamp = USstamps # Shorten Name
rm(USstamps) #Removes Old Object from Environment
plot(Price ~ Year,data=stamp)
#Remove First Four Years in Data (1885,1917,1919,1932)
#See Exercise 1.33 for Reason Why
stamp2 = subset(stamp, Year > 1932)
plot(Price ~ Year,data=stamp2)
#Linear Regression on Original Data
mod1 <- lm(Price~Year,data=stamp)
mod1
summary(mod1)
plot(Price ~ Year,data=stamp)
abline(mod1)
#Linear Regression on Subsetted Data
mod2 <-lm(Price~Year, data=stamp2)
mod2
summary(mod2)
plot(Price ~ Year,data=stamp2)
abline(mod2)
mod1$residuals
mod1$fitted.values
stamp$fit=mod1$fitted.values
stamp$resid=mod1$residuals
mod2$residuals
mod2$fitted.values
stamp2$fit=mod2$fitted.values
stamp2$resid=mod2$residuals
plot(y=stamp$resid,x=stamp$fit,type="l")
abline(h=0) #h=location of horizontal line
plot(y=stamp2$resid,x=stamp2$fit,type="l")
abline(h=0)
plot(y=stamp$resid,x=1:25,type="l")
abline(h=0) #h=location of horizontal line
plot(y=stamp2$resid,x=stamp2$Year,type="l")
abline(h=0)
hist(mod1$residuals,breaks=5) #Remember: We can always plot residuals directly from model object
hist(stamp2$resid,breaks=5) #Remember: We can plot residuals that we saved into our dataset
boxplot(mod1$residuals)
boxplot(mod2$residuals)
hist(mod1$residuals,breaks=5) #Remember: We can always plot residuals directly from model object
hist(stamp2$resid,breaks=5) #Remember: We can plot residuals that we saved into our dataset
boxplot(stamp1$resid)
boxplot(stamp$resid)
boxplot(mod2$residuals)
boxplot(stamp$resid)
boxplot(mod2$residuals)
hist(mod1$residuals,breaks=5) #Remember: We can always plot residuals directly from model object
hist(stamp2$resid,breaks=5) #Remember: We can plot residuals that we saved into our dataset
boxplot(stamp$resid)
boxplot(mod2$residuals)
qqnorm(stamp$resid)
qqline(stamp$resid)
qqnorm(stamp$resid)
qqline(stamp$resid)
qqnorm(stamp$resid)
qqline(stamp$resid)
qqnorm(stamp$resid)
qqline(stamp$resid)
qqnorm(stamp2$resid)
qqline(stamp2$resid)
