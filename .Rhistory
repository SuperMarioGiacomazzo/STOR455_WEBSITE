install.packages("rmarkdown")
install.packages("rmarkdown")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
#install.packages("rmarkdown")
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
lego = read_csv("D:/Mario Documents/UNC/STOR 455/STOR455_WEBSITE/Supplement/Model Basics")
lego = read_csv("D:/Mario Documents/UNC/STOR 455/STOR455_WEBSITE/Supplement/Model Basics/lego.csv")
lego1 <- read_csv("lego.csv")
lego2 = read_csv("D:/Mario Documents/UNC/STOR 455/STOR455_WEBSITE/Supplement/Model Basics/lego.csv")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
#install.packages("rmarkdown")
library(rmarkdown)
library(tinytex)
library(knitr)
library(readr)
head(lego) #Vertically (Top 6 Rows by Default)
str(lego)  #Horizontally
head(lego) #Vertically (Top 6 Rows by Default)
str(lego)  #Horizontally
?head
head(lego1) #Vertically (Top 6 Rows by Default)
# Loads a package needed to use the read_csv() function
# CSV file needs to be in the same folder as your RMD file
# Default working directory is same as directory of your RMD file
lego1 <- read_csv("lego.csv")
lego1 <- read_csv("lego.csv")
# You can specify the full path on your computer like below
lego2 = read_csv("D:/Mario Documents/UNC/STOR 455/STOR455_WEBSITE/Supplement/Model Basics/lego.csv")
lego1 <- read_csv("lego.csv")
lego1 <- read_csv("lego.csv")
# You can specify the full path on your computer like below
lego2 = read_csv("D:/Mario Documents/UNC/STOR 455/STOR455_WEBSITE/Supplement/Model Basics/lego.csv")
head(lego1) #Vertically (Top 6 Rows by Default)
#?head
str(lego1)  #Horizontally
dim(lego1)
#?head
head(lego1,n=12)
head(lego1) #Vertically (Top 6 Rows by Default)
str(lego1)  #Horizontally
#?head
head(lego1,n=12)
dim(lego1)
lego1[c(1,5, 10, 15, 20),]
lego1[,c(1,5, 15)]
lego1[,c("Item_Number","Price","Size")]
lego1[,c(1,5, 15)]
lego1[,c("Item_Number","Price","Size")]
names(lego1)
lego1[,names(lego1)[c(1,5,15)]]
lego1[c(1,5, 10, 15, 20),]
lego1$Year<1998
hist(lego1$Year)
View(lego1)
hist(lego1$Pieces)
lego1$Pieces<1000
lego1$Pieces>1000
large_lego = lego1[lego1$Pieces>1000,]
View(large_lego)
hist(lego1$Pieces)
small_lego = lego1[lego1$Pieces< 50,]
small_lego = lego1[lego1$Pieces< 15,]
large_lego = lego1[lego1$Pieces>2000,]
small_lego = lego1[lego1$Pieces< 15,]
middle_lego=lego1[lego1$Pieces>15 & lego1$Pieces<2000,]
middle_lego
extreme_lego=lego1[lego1$Pieces<15 | lego1Pieces>2000,]
extreme_lego=lego1[lego1$Pieces<15 | lego1$Pieces>2000,]
a=3
b=4
#Combination
a=3
b=c(4,5,6,7)
c=4
a*b+c
yint+slope*TypeCode
yint=54
slope=7.6
TypeCode=c(0,1) #0=Wooden & 1=Steel
yint+slope*TypeCode
TopSpeed = yint+slope*TypeCode
TopSpeed
IQR(lego1$Amazon_Price)
mean(lego1$Amazon_Price,na.rm=T)
median(lego1$Amazon_Price,na.rm=T)
sd(lego1$Amazon_Price,na.rm=T)
var(lego1$Amazon_Price,na.rm=T)
IQR(lego1$Amazon_Price,na.rm=T)
quantile(lego1$Amazon_Price,na.rm=T)
quantile(lego1$Amazon_Price,c(0.05,0.95),na.rm=T)
quantile(lego1$Amazon_Price,c(0.05,0.1,0.9,0.95),na.rm=T)
View(lego1)
unique(lego1$Theme)
table(lego1$Theme)
table(lego1$Theme,lego1$Ages)
View(lego1)
table(lego1$Size,lego1$Ages)
View(lego1)
table(lego1$Size,lego1$Packaging)
View(lego1)
View(lego1)
table(lego1$Size,lego1$Availability)
mode(lego1$Theme)
corr(lego1$Amazon_Price,lego1$Price)
cor(lego1$Amazon_Price,lego1$Price)
cor(lego1$Amazon_Price,lego1$Price,na.rm=T)
cor(lego1$Amazon_Price,lego1$Price,na.rm=T)
cor(lego1$Amazon_Price,lego1$Price)
cor(lego1$Amazon_Price,lego1$Price,na.rm=T)
lego1$Amazon_Price
lego1$Price
na_rm_lego1 = na.omit(lego1)
cor(na_rm_lego1$Amazon_Price,na_rm_lego1$Price)
lm(Amazon_Price ~ Price, data=na_rm_lego1)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse) #Loads the dplyr package for data manipulation
library(nycflights13) #Loads the nycflights13 package for flights data
f1a=filter(flights,flight==807)
View(f1a)
flights
View(flights)
f1a=filter(flights,flight==677)
f1b=select(f1a,flight,carrier,origin,dest)
f1c=rename(f1b,destination=dest)
f1d=arrange(f1c,carrier,origin,destination)
head(f1d)
View(f1d)
f1e=arrange(f1d,desc(carrier),desc(origin),desc(destination))
head(f1e,18)
f1e=arrange(f1d,desc(carrier),desc(origin),desc(destination))
head(f1e)
f1d=arrange(f1c,carrier,origin,destination)
head(f1d,10)
f1b=select(f1a,flight,carrier,origin,dest)
f1c=rename(f1b,destination=dest)
f1d=arrange(f1c,carrier,origin,destination)
head(f1d,10)
f1e=arrange(f1d,desc(carrier),desc(origin),desc(destination))
head(f1e)
f1d<-arrange(f1c,VARIABLES)
f1d<-arrange(f1c,VARIABLES)
f1e<-arrange(f1d,SORT_BY)
f1e<-arrange(f1d,SORT_BY)
f1d=arrange(f1c,carrier,origin,destination)
head(f1d,10)
f1e=arrange(f1d,desc(carrier),desc(origin),desc(destination))
head(f1e)
f2e.pipedream = flights %>%
transmute(dep_hr=dep_time%/%100+(dep_time%%100)/60,
sched_dep_hr=sched_dep_time%/%100+(sched_dep_time%%100)/60,
arr_hr=arr_time%/%100+(arr_time%%100)/60,
sched_arr_hr=sched_arr_time%/%100+(sched_arr_time%%100)/60) %>%
mutate(dep_delay_hr=dep_hr-sched_dep_hr,
arr_delay_hr=arr_hr-sched_arr_hr) %>%
mutate(gain_hr=arr_delay_hr-dep_delay_hr,
percent_gain_hr=percent_rank(gain_hr)) %>%
filter(percent_gain_hr<0.1|percent_gain_hr>0.9) %>%
arrange(desc(percent_gain_hr))
f.accuracy2[3,]
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse) #Loads the dplyr package for data manipulation
library(nycflights13) #Loads the nycflights13 package for flights data
f1a=filter(flights,flight==677)
f1b=select(f1a,flight,carrier,origin,dest)
f1c=rename(f1b,destination=dest)
f1d=arrange(f1c,carrier,origin,destination)
head(f1d,10)
f1e=arrange(f1d,desc(carrier),desc(origin),desc(destination))
head(f1e)
f2a=transmute(flights,
dep_hr=dep_time%/%100+(dep_time%%100)/60,
sched_dep_hr=sched_dep_time%/%100+(sched_dep_time%%100)/60,
arr_hr=arr_time%/%100+(arr_time%%100)/60,
sched_arr_hr=sched_arr_time%/%100+(sched_arr_time%%100)/60)
names(f2a)
head(f2a,5)
f2b=mutate(f2a,
dep_delay_hr=dep_hr-sched_dep_hr,
arr_delay_hr=arr_hr-sched_arr_hr)
f2c=mutate(f2b,
gain_hr=arr_delay_hr-dep_delay_hr,
percent_gain_hr=percent_rank(gain_hr))
f2d=filter(f2c,percent_gain_hr<0.1|percent_gain_hr>0.9)
f2e=arrange(f2d,desc(percent_gain_hr))
f2e.pipedream = flights %>%
transmute(dep_hr=dep_time%/%100+(dep_time%%100)/60,
sched_dep_hr=sched_dep_time%/%100+(sched_dep_time%%100)/60,
arr_hr=arr_time%/%100+(arr_time%%100)/60,
sched_arr_hr=sched_arr_time%/%100+(sched_arr_time%%100)/60) %>%
mutate(dep_delay_hr=dep_hr-sched_dep_hr,
arr_delay_hr=arr_hr-sched_arr_hr) %>%
mutate(gain_hr=arr_delay_hr-dep_delay_hr,
percent_gain_hr=percent_rank(gain_hr)) %>%
filter(percent_gain_hr<0.1|percent_gain_hr>0.9) %>%
arrange(desc(percent_gain_hr))
identical(f2e,f2e.pipedream)
f.accuracy<-mutate(flights,
dep_hr=dep_time%/%100+(dep_time%%100)/60,
sched_dep_hr=sched_dep_time%/%100+(sched_dep_time%%100)/60,
arr_hr=arr_time%/%100+(arr_time%%100)/60,
sched_arr_hr=sched_arr_time%/%100+(sched_arr_time%%100)/60,
dep_delay_hr=dep_hr-sched_dep_hr,
arr_delay_hr=arr_hr-sched_arr_hr,
accuracy=abs(dep_delay)+abs(arr_delay)) #Other methods can be used (Distance Function with Square Root)
head(f.accuracy,6)
f.accuracy2=select(f.accuracy,carrier,accuracy)
f.accuracy2[3,]
carrier.summary<- f.accuracy2 %>%
group_by(COMPLETE) %>%
summarize(
mean.accuracy=mean(COMPLETE,na.rm=T),
sd.accuracy=sd(COMPLETE,na.rm=T)
)
# This is a good place to put libraries required for using the ggplot function
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse) #Loads the dplyr package for data manipulation
library(nycflights13) #Loads the nycflights13 package for flights data
carrier.summary<- f.accuracy2 %>%
group_by(COMPLETE) %>%
summarize(
mean.accuracy=mean(COMPLETE,na.rm=T),
sd.accuracy=sd(COMPLETE,na.rm=T)
)
f.accuracy2=select(f.accuracy,carrier,accuracy)
carrier.summary<- f.accuracy2 %>%
group_by(COMPLETE) %>%
summarize(
mean.accuracy=mean(COMPLETE,na.rm=T),
sd.accuracy=sd(COMPLETE,na.rm=T)
)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(mosaic)
Turtles = read_csv("Turtles.csv")
Turtles = read_csv("Turtles.csv")
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(mosaic)
library(readr)
#This code chunk is for modifying the global options and for loading required R packages
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(tinytex)
library(knitr)
library(mosaic)
library(readr)
Turtles = readcsv("Turtles.csv")
Turtles = read_csv("Turtles.csv")
head(Turtles,10)
Turtles = read_csv("Turtles.csv")
head(Turtles,4)
View(Turtles)
Adult_Turtles = subset(Turtles, LifeStage=="Adult")
head(Adult_Turtles,4)
Adult_Turtles = subset(Turtles, LifeStage=="Adult")
head(Adult_Turtles,4)
View(Turtles)
View(Adult_Turtles)
